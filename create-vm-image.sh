#!/bin/bash

# üñ•Ô∏è –°–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ Troubleshoot VM
# –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–∑—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

set -euo pipefail

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
info() { echo -e "${BLUE}[INFO]${NC} $1"; }
success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
VM_NAME="troubleshoot-vm"
OUTPUT_DIR="$HOME/Downloads/troubleshoot-vm-images"
UTM_DATA_DIR="$HOME/Library/Containers/com.utmapp.UTM/Data/Documents"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    if ! command -v qemu-img &> /dev/null; then
        error "qemu-img –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install qemu"
        exit 1
    fi
    
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ü–æ–∏—Å–∫ UTM VM
find_utm_vm() {
    info "–ü–æ–∏—Å–∫ UTM –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã..."
    
    UTM_VM_PATH=$(find "$UTM_DATA_DIR" -name "*troubleshoot*.utm" -type d | head -1)
    
    if [ -z "$UTM_VM_PATH" ]; then
        error "UTM VM –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $UTM_DATA_DIR"
        error "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ VM –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è 'troubleshoot-vm' –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç 'troubleshoot' –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏"
        exit 1
    fi
    
    success "–ù–∞–π–¥–µ–Ω–∞ VM: $UTM_VM_PATH"
    
    # –ü–æ–∏—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–∏—Å–∫–∞
    DISK_PATH=$(find "$UTM_VM_PATH/Images" -name "*.qcow2" | head -1)
    
    if [ -z "$DISK_PATH" ]; then
        error "–î–∏—Å–∫ VM –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $UTM_VM_PATH/Images"
        exit 1
    fi
    
    success "–ù–∞–π–¥–µ–Ω –¥–∏—Å–∫: $DISK_PATH"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
prepare_output_dir() {
    info "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
    
    mkdir -p "$OUTPUT_DIR"
    
    if [ -d "$OUTPUT_DIR" ]; then
        warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $OUTPUT_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        read -p "–û—á–∏—Å—Ç–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é? (y/N): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            rm -rf "$OUTPUT_DIR"/*
            success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞"
        fi
    fi
    
    success "–í—ã—Ö–æ–¥–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –≥–æ—Ç–æ–≤–∞: $OUTPUT_DIR"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ QCOW2 –æ–±—Ä–∞–∑–∞
create_qcow2_image() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ QCOW2 –æ–±—Ä–∞–∑–∞..."
    
    local output_file="$OUTPUT_DIR/troubleshoot-vm-universal.qcow2"
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
    qemu-img convert -p -O qcow2 -c "$DISK_PATH" "$output_file"
    
    local size=$(ls -lh "$output_file" | awk '{print $5}')
    success "QCOW2 –æ–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω: $output_file ($size)"
}

# –°–æ–∑–¥–∞–Ω–∏–µ VMDK –æ–±—Ä–∞–∑–∞ –¥–ª—è VMware
create_vmdk_image() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ VMDK –æ–±—Ä–∞–∑–∞ –¥–ª—è VMware..."
    
    local input_file="$OUTPUT_DIR/troubleshoot-vm-universal.qcow2"
    local output_file="$OUTPUT_DIR/troubleshoot-vm-vmware.vmdk"
    
    qemu-img convert -p -f qcow2 -O vmdk "$input_file" "$output_file"
    
    local size=$(ls -lh "$output_file" | awk '{print $5}')
    success "VMDK –æ–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω: $output_file ($size)"
}

# –°–æ–∑–¥–∞–Ω–∏–µ VDI –æ–±—Ä–∞–∑–∞ –¥–ª—è VirtualBox  
create_vdi_image() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ VDI –æ–±—Ä–∞–∑–∞ –¥–ª—è VirtualBox..."
    
    local input_file="$OUTPUT_DIR/troubleshoot-vm-universal.qcow2"
    local output_file="$OUTPUT_DIR/troubleshoot-vm-virtualbox.vdi"
    
    qemu-img convert -p -f qcow2 -O vdi "$input_file" "$output_file"
    
    local size=$(ls -lh "$output_file" | awk '{print $5}')
    success "VDI –æ–±—Ä–∞–∑ —Å–æ–∑–¥–∞–Ω: $output_file ($size)"
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ UTM —Ñ–∞–π–ª–∞
copy_utm_image() {
    info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ UTM –æ–±—Ä–∞–∑–∞..."
    
    local output_file="$OUTPUT_DIR/troubleshoot-vm.utm"
    
    cp -R "$UTM_VM_PATH" "$output_file"
    
    local size=$(du -sh "$output_file" | awk '{print $1}')
    success "UTM –æ–±—Ä–∞–∑ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: $output_file ($size)"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
create_documentation() {
    info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
    cp "VM_IMAGE_USAGE.md" "$OUTPUT_DIR/"
    cp "README.md" "$OUTPUT_DIR/" 2>/dev/null || true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–Ω–∏—Ñ–µ—Å—Ç–∞
    cat > "$OUTPUT_DIR/IMAGE_MANIFEST.txt" << EOF
Troubleshoot VM - Image Manifest
=================================

Created: $(date)
Version: 1.0
Creator: $(whoami)

Files included:
===============

troubleshoot-vm.utm              - UTM format (macOS)
troubleshoot-vm-universal.qcow2  - Universal QEMU format  
troubleshoot-vm-vmware.vmdk      - VMware format
troubleshoot-vm-virtualbox.vdi   - VirtualBox format
VM_IMAGE_USAGE.md               - Usage instructions
README.md                       - Project documentation
IMAGE_MANIFEST.txt              - This file

System Information:
==================

Base OS: Ubuntu Server 22.04 LTS
Username: ubuntu / Password: ubuntu
Services: echo, watcher, locker
Ports: SSH(22), HTTP(8080)
Disk size: ~25GB allocated

Checksums:
==========

$(cd "$OUTPUT_DIR" && find . -name "*.qcow2" -o -name "*.vmdk" -o -name "*.vdi" | xargs shasum -a 256 2>/dev/null || echo "Checksums not available")

EOF
    
    success "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
}

# –ü–æ–∫–∞–∑–∞—Ç—å –∏—Ç–æ–≥–∏
show_summary() {
    echo
    success "üéâ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo
    echo "üìÅ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: $OUTPUT_DIR"
    echo
    echo "üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
    ls -lh "$OUTPUT_DIR"
    echo
    echo "üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  ‚Ä¢ UTM (macOS):      troubleshoot-vm.utm"
    echo "  ‚Ä¢ QEMU/KVM:         troubleshoot-vm-universal.qcow2"  
    echo "  ‚Ä¢ VMware:           troubleshoot-vm-vmware.vmdk"
    echo "  ‚Ä¢ VirtualBox:       troubleshoot-vm-virtualbox.vdi"
    echo
    echo "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:       VM_IMAGE_USAGE.md"
    echo
    warning "‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ VM –±—ã–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω–∞ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –æ–±—Ä–∞–∑–∞!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo
    info "üñ•Ô∏è  Troubleshoot VM - Image Creator"
    echo "=================================="
    echo
    
    check_dependencies
    find_utm_vm
    prepare_output_dir
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ VM –≤—ã–∫–ª—é—á–µ–Ω–∞
    if pgrep -f "$VM_NAME" > /dev/null; then
        error "VM $VM_NAME —Å–µ–π—á–∞—Å –∑–∞–ø—É—â–µ–Ω–∞!"
        error "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ VM –≤ UTM –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –æ–±—Ä–∞–∑–∞"
        exit 1
    fi
    
    create_qcow2_image
    create_vmdk_image
    create_vdi_image
    copy_utm_image
    create_documentation
    
    show_summary
}

# –ó–∞–ø—É—Å–∫
main "$@"
